package pt.tecnico.mydrive.domain;

class Session {
	long token; // long is 64 bits in Java (signed or not, doesn't matter)
	String workingPath; // same reason we used a String for User.homePath
	DateTime expirationDate;
}

class FileSystem {
    long fileCounter;
}

class User {
	String username;
	String password;
	String name;
	byte mask;
	String homePath; // discussable (please discuss this in issue #4 if needed)
}

class File {
	String name;
	long id;
	byte mask; // A.K.A. file permissions
	DateTime lastMod;
}

class PlainFile extends File {
	String content;
}

class Directory extends File;

class App extends PlainFile;

class Link extends PlainFile;

class SuperUser extends User;

relation FileSystemHasUsers {
	User playsRole user {multiplicity 0..*;}
	FileSystem playsRole fs {multiplicity 1;}
}

relation UserHasFiles {
    File playsRole file { multiplicity 0..*; }
    User playsRole owner { multiplicity 1; }
}

relation FileSystemHasRootDir {

	FileSystem playsRole fs { multiplicity 1; }
	Directory playsRole rootDir {  multiplicity 0..1; }
}

relation DirectoryHasFiles {
	Directory playsRole parentDir { multiplicity 1; }
	File playsRole file { multiplicity *; }
}

relation FileSystemHasSuperUser{
	FileSystem playsRole fileSystem { multiplicity 1; }
	SuperUser playsRole superUser { multiplicity 1; }
}

relation DomainRootHasFileSystem {
	.pt.ist.fenixframework.DomainRoot playsRole root { multiplicity 0..1; }
	FileSystem playsRole fileSystem { multiplicity 0..1; }
}

relation UserHasSessions {
	User playsRole user { multiplicity 1; }
	Session playsRole session { multiplicity *; } // a user may have multiple active sessions
}
